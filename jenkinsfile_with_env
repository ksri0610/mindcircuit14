pipeline {
    agent any

    tools {
        maven 'maven3'
    }

    environment {
        GIT_REPO_NAME = "mindcircuit14"
        GIT_USER_NAME = "ksri0610"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        GITHUB_TOKEN = credentials('githubtoken')
    }

    stages {
        stage('Git Checkout') {
            steps {
                echo 'Cloning GitHub Repository'
                git branch: 'main', 
                     url: "'https://github.com/ksri0610/mindcircuit14.git'/${GIT_USER_NAME}/${GIT_REPO_NAME}.git",
                     credentialsId: 'githubtoken'
            }
        }

        stage('SonarQube Scan') {
            steps {
                echo 'Running SonarQube Analysis'
                withSonarQubeEnv('SonarQube') {
                    sh """
                        mvn sonar:sonar \
                        -Dsonar.host.url=http://3.108.217.213:9000/ \
                        -Dsonar.login=squ_86101f43372b5e91d652da644eb1b9790161db57
                    """
                }
            }
        }

        stage('Build Artifact') {
            steps {
                echo 'Building Artifact'
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker Image'
                script {
                    dockerImage = docker.build("devopshubg333/batch14:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                echo 'Pushing Image to DockerHub'
                script {
                    docker.withRegistry('', 'dockerhub') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                echo 'Updating Deployment File'
                script {
                    withCredentials([usernamePassword(credentialsId: 'githubtoken', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh """
                            git config user.email "ksri0610@gmail.com"
                            git config user.name "ksri0610"
                            sed -i "s/batch14:.*/batch14:${env.BUILD_NUMBER}/g" deploymentfiles/deployment.yml
                            git add .
                            git commit -m "Update deployment image to version ${env.BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Build #${env.BUILD_NUMBER} of ${env.JOB_NAME} completed with status: ${currentBuild.result}"
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
